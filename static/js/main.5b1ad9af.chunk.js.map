{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPABET","sortByLength","LENGTH","reverse","reset","this","goods","visibleGoods","sort","good","nextGood","localeCompare","length","getReorderedGoods","className","type","onClick","classNames","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CACZH,SAAUL,EAASS,WARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,EAwBES,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAjEH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENY,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAMC,GACvB,OAAQd,GACN,KAAKL,EAASS,QACZ,OAAOS,EAAKE,cAAcD,GAE5B,KAAKnB,EAASW,OACZ,OAAOO,EAAKG,OAASF,EAASE,OAEhC,KAAKrB,EAASM,KACd,QACE,OAAO,MAITF,GACFY,EAAaJ,UAGRI,EAyCSM,CAAkBrB,EAAiBa,KAAKX,OAEtD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASX,KAAKP,eACdgB,UAAWG,IAAW,iBACpB,CAAE,WAAYrB,IAAaL,EAASS,UAJxC,iCASA,wBACEe,KAAK,SACLC,QAASX,KAAKJ,aACda,UAAWG,IAAW,oBACpB,CAAE,WAAYrB,IAAaL,EAASW,SAJxC,4BASA,wBACEa,KAAK,SACLC,QAASX,KAAKF,QACdW,UAAWG,IAAW,oBACpB,CAAE,YAAatB,IAJnB,sBASEA,GAAcC,IAAaL,EAASM,OAElC,wBACEkB,KAAK,SACLD,UAAU,4BACVE,QAASX,KAAKD,MAHhB,sBAUN,6BACE,6BACGE,EAAMY,KAAI,SAAAT,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,iBAjFrB,GAAyBU,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5b1ad9af.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good, nextGood) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good.localeCompare(nextGood);\n\n      case SortType.LENGTH:\n        return good.length - nextGood.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ninterface State {\n  isReversed: boolean;\n  sortType: SortType;\n}\n\nexport class App extends React.Component<{}, State > {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.sortByAlphabet}\n            className={classNames('button is-info',\n              { 'is-light': sortType !== SortType.ALPABET })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortByLength}\n            className={classNames('button is-success',\n              { 'is-light': sortType !== SortType.LENGTH })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.reverse}\n            className={classNames('button is-warning',\n              { 'is-light': !isReversed })}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li\n                key={good}\n                data-cy=\"Good\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}